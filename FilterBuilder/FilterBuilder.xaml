<Window x:Class="CmcScriptNet.FilterBuilder.FilterBuilderWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:my="clr-namespace:CmcScriptNet.FilterBuilder.UserControls"
        xmlns:models="clr-namespace:CmcScriptNet.FilterBuilder.Models"
        mc:Ignorable="d"
        Title="{Binding CategoryName, Mode=OneTime, StringFormat='Filter for Category: {0}'}" MaxHeight="640" MaxWidth="800">
    <Window.DataContext>
        <models:FilterBuilderModel x:Name="filterBuilderModel"/>
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="filterToVisibility" TargetType="StackPanel">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=filterList, Path=SelectedItem.Tag}" Value="filter">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="summaryToVisibility" TargetType="StackPanel">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=filterList, Path=SelectedItem.Tag}" Value="summary">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid ShowGridLines="False">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>
        <!-- list of filters.
        We are not going to bother with this,
        because there is no proper way to set the filter relations
        without returning actual script code.
        That could obviously clash with existing code.
        A way of dealing with that could be to insert it as comments.
        I am undecided on the issue...
        Another complex matter is the retaining of the set values
        on the viewmodel when switching models.
        I'd like the FilterControl to show the previously selected values, 
        but I cannot seem to get that working properly.
        For now I will leave this code in, in case I ever change our mind in the future.
        For now it will just show 1 filter.
        Note that not all code takes into account this future feature
        -->
        <StackPanel Orientation="Vertical" Grid.Column="1" Grid.Row="1">
            <ListView x:Name="filterList"
                ItemsSource="{Binding FilterListItems}"
                DisplayMemberPath="DisplayName"
                Margin="5"
                SelectedValuePath="FilterControlModel"
                SelectedValue="{Binding Path=CurrentFilterControlModel, Mode=TwoWay}"
                SelectedIndex="1"/>
        </StackPanel>
     
        <!-- the filter conjunction control -->
        <StackPanel Orientation="Vertical" Grid.Column="2" Grid.Row="1"
                    Style="{StaticResource summaryToVisibility}">
            <my:FilterConjunctionControl/>
            <TextBox x:Name="tbConjunction" Background="WhiteSmoke"
                     IsReadOnly="True"
                     IsReadOnlyCaretVisible="True"
                     Text="{Binding Path=ViewConjunction}"
                     HorizontalAlignment="Center"/>
        </StackPanel>
                
        <!-- the filter control -->
        <StackPanel Orientation="Vertical" Grid.Column="2" Grid.Row="1"
                    Style="{StaticResource filterToVisibility}">
            <my:FilterControl/>

        </StackPanel>

        <!-- buttons -->
        <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="2" HorizontalAlignment="Right">
            <Button Content="Insert" IsDefault="True" Click="Ok_Click" MinWidth="80" Margin="5"
                    IsEnabled="{Binding Path=CurrentFilterControlModel.IsValid}"/>
            <Button Content="Cancel" IsCancel="True" MinWidth="80" Margin="5"/>
        </StackPanel>
    </Grid>
</Window>
